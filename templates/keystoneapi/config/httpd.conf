ServerTokens Prod
ServerSignature Off
TraceEnable Off
PidFile run/httpd.pid
ServerRoot "/etc/httpd"
ServerName "localhost.localdomain"

User apache
Group apache

Listen 5000

TypesConfig /etc/mime.types

Include conf.modules.d/*.conf
Include conf.d/*.conf

LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" combined
LogFormat "%{X-Forwarded-For}i %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" proxy

SetEnvIf X-Forwarded-For "^.*\..*\..*\..*" forwarded
CustomLog /dev/stdout combined env=!forwarded
CustomLog /dev/stdout proxy env=forwarded

{{ range $endpt, $vhost := .VHosts }}
# {{ $endpt }} vhost {{ $vhost.ServerName }} configuration
<VirtualHost *:5000>
  ServerName {{ $vhost.ServerName }}

  ## Vhost docroot
  DocumentRoot "/var/www/cgi-bin/keystone"

  ## Directories, there should at least be a declaration for /var/www/cgi-bin/keystone
  <Directory "/var/www/cgi-bin/keystone">
    Options -Indexes +FollowSymLinks +MultiViews
    AllowOverride None
    Require all granted
  </Directory>

  ## Logging
  ErrorLog /dev/stdout
  ServerSignature Off
  CustomLog /dev/stdout combined

{{- if $vhost.TLS }}
  SetEnvIf X-Forwarded-Proto https HTTPS=1

  ## SSL directives
  SSLEngine on
  SSLCertificateFile      "{{ $vhost.SSLCertificateFile }}"
  SSLCertificateKeyFile   "{{ $vhost.SSLCertificateKeyFile }}"
{{- end }}

 ## WSGI configuration
  WSGIApplicationGroup %{GLOBAL}
  WSGIDaemonProcess {{ $endpt }} display-name={{ $endpt }} group=keystone processes={{ $.ProcessNumber }} threads=1 user=keystone
  WSGIProcessGroup {{ $endpt }}
  WSGIScriptAlias / "/usr/bin/keystone-wsgi-public"
  WSGIPassAuthorization On


{{- if $vhost.EnableFederation }}
  # LoadModule auth_openidc_module modules/mod_auth_openidc.so
  OIDCClaimPrefix "{{ $vhost.OIDCClaimPrefix }}"
  OIDCResponseType "{{ $vhost.OIDCResponseType }}"
  OIDCScope "{{ $vhost.OIDCScope }}"
  OIDCProviderMetadataURL "{{ $vhost.OIDCProviderMetadataURL }}"
  OIDCClientID "{{ $vhost.OIDCClientID }}"
  OIDCClientSecret "{{ $vhost.OIDCClientSecret }}"
  OIDCCryptoPassphrase "{{ $vhost.OIDCCryptoPassphrase }}"
  OIDCClaimDelimiter "{{ $vhost.OIDCClaimDelimiter }}"
  OIDCPassUserInfoAs "{{ $vhost.OIDCPassUserInfoAs }}"
  OIDCPassClaimsAs "{{ $vhost.OIDCPassClaimsAs }}"

  OIDCCacheType "{{ $vhost.OIDCCacheType }}"
  OIDCMemCacheServers "{{ $vhost.OIDCMemCacheServers }}"


  # The following directives are necessary to support websso from Horizon
  # (Per https://docs.openstack.org/keystone/pike/advanced-topics/federation/websso.html)
  OIDCRedirectURI "{{ $vhost.KeystoneEndpoint }}/v3/auth/OS-FEDERATION/identity_providers/{{ $vhost.KeystoneFederationIdentityProviderName }}/protocols/openid/websso"
  OIDCRedirectURI "{{ $vhost.KeystoneEndpoint }}/v3/auth/OS-FEDERATION/websso/openid"

  <LocationMatch "/v3/auth/OS-FEDERATION/websso/openid">
    AuthType "openid-connect"
    Require valid-user
  </LocationMatch>

  <LocationMatch "/v3/auth/OS-FEDERATION/identity_providers/{{ $vhost.KeystoneFederationIdentityProviderName }}/protocols/openid/websso">
    AuthType "openid-connect"
    Require valid-user
  </LocationMatch>

  OIDCOAuthClientID "{{ $vhost.OIDCClientID }}"
  OIDCOAuthClientSecret "{{ $vhost.OIDCClientSecret }}"
  OIDCOAuthIntrospectionEndpoint "{{ $vhost.OIDCIntrospectionEndpoint }}"

  <Location ~ "/v3/OS-FEDERATION/identity_providers/{{ $vhost.KeystoneFederationIdentityProviderName }}/protocols/openid/auth">
    AuthType oauth20
    Require valid-user
  </Location>

{{- end }}

</VirtualHost>
{{ end }}

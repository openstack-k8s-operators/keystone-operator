---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: keystoneapis.keystone.openstack.org
spec:
  group: keystone.openstack.org
  names:
    kind: KeystoneAPI
    listKind: KeystoneAPIList
    plural: keystoneapis
    singular: keystoneapi
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: NetworkAttachments
      jsonPath: .spec.networkAttachments
      name: NetworkAttachments
      type: string
    - description: Status
      jsonPath: .status.conditions[0].status
      name: Status
      type: string
    - description: Message
      jsonPath: .status.conditions[0].message
      name: Message
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: KeystoneAPI is the Schema for the keystoneapis API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: KeystoneAPISpec defines the desired state of KeystoneAPI
            properties:
              adminProject:
                default: admin
                description: AdminProject - admin project name
                type: string
              adminUser:
                default: admin
                description: AdminUser - admin user name
                type: string
              containerImage:
                description: Keystone Container Image URL (will be set to environmental
                  default if empty)
                type: string
              customServiceConfig:
                description: CustomServiceConfig - customize the service config using
                  this parameter to change service defaults, or overwrite rendered
                  information using raw OpenStack config format. The content gets
                  added to to /etc/<service>/<service>.conf.d directory as custom.conf
                  file.
                type: string
              databaseInstance:
                description: MariaDB instance name Right now required by the maridb-operator
                  to get the credentials from the instance to create the DB Might
                  not be required in future
                type: string
              databaseUser:
                default: keystone
                description: 'DatabaseUser - optional username used for keystone DB,
                  defaults to keystone TODO: -> implement needs work in mariadb-operator,
                  right now only keystone'
                type: string
              debug:
                description: Debug - enable debug for different deploy stages. If
                  an init container is used, it runs and the actual action pod gets
                  started with sleep infinity
                properties:
                  bootstrap:
                    default: false
                    description: ReadyCount enable debug
                    type: boolean
                  dbSync:
                    default: false
                    description: DBSync enable debug
                    type: boolean
                  service:
                    default: false
                    description: Service enable debug
                    type: boolean
                type: object
              defaultConfigOverwrite:
                additionalProperties:
                  type: string
                description: 'ConfigOverwrite - interface to overwrite default config
                  files like e.g. policy.json. But can also be used to add additional
                  files. Those get added to the service config dir in /etc/<service>
                  . TODO: -> implement'
                type: object
              externalEndpoints:
                description: ExternalEndpoints, expose a VIP using a pre-created IPAddressPool
                items:
                  description: MetalLBConfig to configure the MetalLB loadbalancer
                    service
                  properties:
                    endpoint:
                      description: Endpoint, OpenStack endpoint this service maps
                        to
                      enum:
                      - internal
                      - public
                      type: string
                    ipAddressPool:
                      description: IPAddressPool expose VIP via MetalLB on the IPAddressPool
                      minLength: 1
                      type: string
                    loadBalancerIPs:
                      description: LoadBalancerIPs, request given IPs from the pool
                        if available. Using a list to allow dual stack (IPv4/IPv6)
                        support
                      items:
                        type: string
                      type: array
                    sharedIP:
                      default: true
                      description: SharedIP if true, VIP/VIPs get shared with multiple
                        services
                      type: boolean
                    sharedIPKey:
                      default: ""
                      description: SharedIPKey specifies the sharing key which gets
                        set as the annotation on the LoadBalancer service. Services
                        which share the same VIP must have the same SharedIPKey. Defaults
                        to the IPAddressPool if SharedIP is true, but no SharedIPKey
                        specified.
                      type: string
                  required:
                  - endpoint
                  - ipAddressPool
                  type: object
                type: array
              memcachedInstance:
                default: memcached
                description: Memcached instance name.
                type: string
              networkAttachments:
                description: NetworkAttachments is a list of NetworkAttachment resource
                  names to expose the services to the given network
                items:
                  type: string
                type: array
              nodeSelector:
                additionalProperties:
                  type: string
                description: NodeSelector to target subset of worker nodes running
                  this service
                type: object
              override:
                description: Override, provides the ability to override the generated
                  manifest of several child resources.
                properties:
                  route:
                    description: OverrideSpec configuration for the Route created
                      to serve traffic to the cluster.
                    properties:
                      metadata:
                        description: EmbeddedLabelsAnnotations is an embedded subset
                          of the fields included in k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta.
                          Only labels and annotations are included. New labels/annotations
                          get merged with the ones created by the operator. If a privided
                          annotation/label is the same as one created by the service
                          operator, the ones provided via this override will replace
                          the one from the operator.
                        properties:
                          annotations:
                            additionalProperties:
                              type: string
                            description: 'Annotations is an unstructured key value
                              map stored with a resource that may be set by external
                              tools to store and retrieve arbitrary metadata. They
                              are not queryable and should be preserved when modifying
                              objects. More info: http://kubernetes.io/docs/user-guide/annotations'
                            type: object
                          labels:
                            additionalProperties:
                              type: string
                            description: 'Map of string keys and values that can be
                              used to organize and categorize (scope and select) objects.
                              May match selectors of replication controllers and services.
                              More info: http://kubernetes.io/docs/user-guide/labels'
                            type: object
                        type: object
                      spec:
                        description: "Spec defines the behavior of a Route. https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
                          \n The spec will be merged using StrategicMergePatch - Provided
                          parameters will override the ones from the original spec.
                          - Required parameters of sub structs have to be named. -
                          For parameters which are list of struct it depends on the
                          patchStrategy defined on the list https://kubernetes.io/docs/tasks/manage-kubernetes-objects/update-api-object-kubectl-patch/#notes-on-the-strategic-merge-patch
                          If `patchStrategy:\"merge\"` is set, src and dst list gets
                          merged, otherwise they get replaced."
                        properties:
                          alternateBackends:
                            description: alternateBackends allows up to 3 additional
                              backends to be assigned to the route. Only the Service
                              kind is allowed, and it will be defaulted to Service.
                              Use the weight field in RouteTargetReference object
                              to specify relative preference.
                            items:
                              description: TargetReference specifies the target that
                                resolve into endpoints. Only the 'Service' kind is
                                allowed. Use 'weight' field to emphasize one over
                                others. Copy of RouteTargetReference in https://github.com/openshift/api/blob/master/route/v1/types.go,
                                parameters set to be optional, have omitempty, and
                                no default.
                              properties:
                                kind:
                                  description: The kind of target that the route is
                                    referring to. Currently, only 'Service' is allowed
                                  enum:
                                  - Service
                                  - ""
                                  type: string
                                name:
                                  description: name of the service/target that is
                                    being referred to. e.g. name of the service
                                  type: string
                                weight:
                                  description: weight as an integer between 0 and
                                    256, default 100, that specifies the target's
                                    relative weight against other target reference
                                    objects. 0 suppresses requests to this backend.
                                  format: int32
                                  maximum: 256
                                  minimum: 0
                                  type: integer
                              type: object
                            maxItems: 3
                            type: array
                          host:
                            description: host is an alias/DNS that points to the service.
                              Optional. If not specified a route name will typically
                              be automatically chosen. Must follow DNS952 subdomain
                              conventions.
                            maxLength: 253
                            pattern: ^([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]{0,61}[a-zA-Z0-9])(\.([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]{0,61}[a-zA-Z0-9]))*$
                            type: string
                          path:
                            description: path that the router watches for, to route
                              traffic for to the service. Optional
                            pattern: ^/
                            type: string
                          port:
                            description: If specified, the port to be used by the
                              router. Most routers will use all endpoints exposed
                              by the service by default - set this value to instruct
                              routers which port to use.
                            properties:
                              targetPort:
                                anyOf:
                                - type: integer
                                - type: string
                                description: The target port on pods selected by the
                                  service this route points to. If this is a string,
                                  it will be looked up as a named port in the target
                                  endpoints port list. Required
                                x-kubernetes-int-or-string: true
                            required:
                            - targetPort
                            type: object
                          subdomain:
                            description: "subdomain is a DNS subdomain that is requested
                              within the ingress controller's domain (as a subdomain).
                              If host is set this field is ignored. An ingress controller
                              may choose to ignore this suggested name, in which case
                              the controller will report the assigned name in the
                              status.ingress array or refuse to admit the route. If
                              this value is set and the server does not support this
                              field host will be populated automatically. Otherwise
                              host is left empty. The field may have multiple parts
                              separated by a dot, but not all ingress controllers
                              may honor the request. This field may not be changed
                              after creation except by a user with the update routes/custom-host
                              permission. \n Example: subdomain `frontend` automatically
                              receives the router subdomain `apps.mycluster.com` to
                              have a full hostname `frontend.apps.mycluster.com`."
                            maxLength: 253
                            pattern: ^([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]{0,61}[a-zA-Z0-9])(\.([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]{0,61}[a-zA-Z0-9]))*$
                            type: string
                          tls:
                            description: The tls field provides the ability to configure
                              certificates and termination for the route.
                            properties:
                              caCertificate:
                                description: caCertificate provides the cert authority
                                  certificate contents
                                type: string
                              certificate:
                                description: certificate provides certificate contents.
                                  This should be a single serving certificate, not
                                  a certificate chain. Do not include a CA certificate.
                                type: string
                              destinationCACertificate:
                                description: destinationCACertificate provides the
                                  contents of the ca certificate of the final destination.  When
                                  using reencrypt termination this file should be
                                  provided in order to have routers use it for health
                                  checks on the secure connection. If this field is
                                  not specified, the router may provide its own destination
                                  CA and perform hostname validation using the short
                                  service name (service.namespace.svc), which allows
                                  infrastructure generated certificates to automatically
                                  verify.
                                type: string
                              insecureEdgeTerminationPolicy:
                                description: "insecureEdgeTerminationPolicy indicates
                                  the desired behavior for insecure connections to
                                  a route. While each router may make its own decisions
                                  on which ports to expose, this is normally port
                                  80. \n * Allow - traffic is sent to the server on
                                  the insecure port (default) * Disable - no traffic
                                  is allowed on the insecure port. * Redirect - clients
                                  are redirected to the secure port."
                                type: string
                              key:
                                description: key provides key file contents
                                type: string
                              termination:
                                description: "termination indicates termination type.
                                  \n * edge - TLS termination is done by the router
                                  and http is used to communicate with the backend
                                  (default) * passthrough - Traffic is sent straight
                                  to the destination without the router providing
                                  TLS termination * reencrypt - TLS termination is
                                  done by the router and https is used to communicate
                                  with the backend"
                                enum:
                                - edge
                                - reencrypt
                                - passthrough
                                type: string
                            required:
                            - termination
                            type: object
                          to:
                            description: to is an object the route should use as the
                              primary backend. Only the Service kind is allowed, and
                              it will be defaulted to Service. If the weight field
                              (0-256 default 100) is set to zero, no traffic will
                              be sent to this backend.
                            properties:
                              kind:
                                description: The kind of target that the route is
                                  referring to. Currently, only 'Service' is allowed
                                enum:
                                - Service
                                - ""
                                type: string
                              name:
                                description: name of the service/target that is being
                                  referred to. e.g. name of the service
                                type: string
                              weight:
                                description: weight as an integer between 0 and 256,
                                  default 100, that specifies the target's relative
                                  weight against other target reference objects. 0
                                  suppresses requests to this backend.
                                format: int32
                                maximum: 256
                                minimum: 0
                                type: integer
                            type: object
                          wildcardPolicy:
                            description: Wildcard policy if any for the route. Currently
                              only 'Subdomain' or 'None' is allowed.
                            enum:
                            - None
                            - Subdomain
                            - ""
                            type: string
                        type: object
                    type: object
                type: object
              passwordSelectors:
                default:
                  admin: AdminPassword
                  database: KeystoneDatabasePassword
                description: PasswordSelectors - Selectors to identify the DB and
                  AdminUser password from the Secret
                properties:
                  admin:
                    default: AdminPassword
                    description: Admin - Selector to get the keystone Admin password
                      from the Secret
                    type: string
                  database:
                    default: KeystoneDatabasePassword
                    description: 'Database - Selector to get the keystone Database
                      user password from the Secret TODO: not used, need change in
                      mariadb-operator'
                    type: string
                type: object
              preserveJobs:
                default: false
                description: PreserveJobs - do not delete jobs after they finished
                  e.g. to check logs
                type: boolean
              region:
                default: regionOne
                description: Region - optional region name for the keystone service
                type: string
              replicas:
                default: 1
                description: Replicas of keystone API to run
                format: int32
                maximum: 32
                minimum: 0
                type: integer
              resources:
                description: Resources - Compute Resources required by this service
                  (Limits/Requests). https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                properties:
                  claims:
                    description: "Claims lists the names of resources, defined in
                      spec.resourceClaims, that are used by this container. \n This
                      is an alpha field and requires enabling the DynamicResourceAllocation
                      feature gate. \n This field is immutable. It can only be set
                      for containers."
                    items:
                      description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                      properties:
                        name:
                          description: Name must match the name of one entry in pod.spec.resourceClaims
                            of the Pod where this field is used. It makes that resource
                            available inside a container.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                    x-kubernetes-list-map-keys:
                    - name
                    x-kubernetes-list-type: map
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Limits describes the maximum amount of compute resources
                      allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Requests describes the minimum amount of compute
                      resources required. If Requests is omitted for a container,
                      it defaults to Limits if that is explicitly specified, otherwise
                      to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                type: object
              secret:
                description: Secret containing OpenStack password information for
                  keystone KeystoneDatabasePassword, AdminPassword
                type: string
              trustFlushArgs:
                default: ""
                description: TrustFlushArgs - Arguments added to keystone-manage trust_flush
                  command
                type: string
              trustFlushSchedule:
                default: 1 * * * *
                description: TrustFlushSchedule - Schedule to purge expired or soft-deleted
                  trusts from database
                type: string
              trustFlushSuspend:
                default: false
                description: TrustFlushSuspend - Suspend the cron job to purge trusts
                type: boolean
            required:
            - containerImage
            - databaseInstance
            - memcachedInstance
            - secret
            type: object
          status:
            description: KeystoneAPIStatus defines the observed state of KeystoneAPI
            properties:
              apiEndpoints:
                additionalProperties:
                  type: string
                description: API endpoint
                type: object
              conditions:
                description: Conditions
                items:
                  description: Condition defines an observation of a API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase.
                      type: string
                    severity:
                      description: Severity provides a classification of Reason code,
                        so the current situation is immediately understandable and
                        could act accordingly. It is meant for situations where Status=False
                        and it should be indicated if it is just informational, warning
                        (next reconciliation might fix it) or an error (e.g. DB create
                        issue and no actions to automatically resolve the issue can/should
                        be done). For conditions where Status=Unknown or Status=True
                        the Severity should be SeverityNone.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              databaseHostname:
                description: Keystone Database Hostname
                type: string
              hash:
                additionalProperties:
                  type: string
                description: Map of hashes to track e.g. job status
                type: object
              networkAttachments:
                additionalProperties:
                  items:
                    type: string
                  type: array
                description: NetworkAttachments status of the deployment pods
                type: object
              readyCount:
                description: ReadyCount of keystone API instances
                format: int32
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

#
# Check for:
#
# - 1 KeystoneAPI CR
# - Deployment with 1 Pod for KeystoneAPI CR
# - Keystone-internal Service
# - Keystone-public Service
# - Keystone-public Route

apiVersion: keystone.openstack.org/v1beta1
kind: KeystoneAPI
metadata:
  finalizers:
  - KeystoneAPI
  name: keystone
  namespace: openstack
spec:
  adminProject: admin
  adminRole: admin
  adminUser: admin
  containerImage: quay.io/tripleozedcentos9/openstack-keystone:current-tripleo
  customServiceConfig: |
    [DEFAULT]
    debug = true
  databaseInstance: openstack
  databaseUser: keystone
  debug:
    bootstrap: false
    dbSync: false
    service: false
  passwordSelectors:
    admin: AdminPassword
    database: KeystoneDatabasePassword
  preserveJobs: false
  region: regionOne
  replicas: 1
  resources:
    requests:
      cpu: "1"
      memory: 500Mi
  secret: osp-secret
status:
  databaseHostname: openstack
  readyCount: 1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: keystone
  namespace: openstack
spec:
  replicas: 1
  template:
    metadata:
      labels:
        service: keystone
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: service
                  operator: In
                  values:
                  - keystone
              topologyKey: kubernetes.io/hostname
            weight: 1
      containers:
      - args:
        - -c
        - /usr/local/bin/kolla_set_configs && /usr/local/bin/kolla_start
        command:
        - /bin/bash
        image: quay.io/tripleozedcentos9/openstack-keystone:current-tripleo
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /v3
            port: 5000
            scheme: HTTP
          initialDelaySeconds: 3
          periodSeconds: 3
          successThreshold: 1
          timeoutSeconds: 5
        name: keystone-api
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /v3
            port: 5000
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          requests:
            cpu: "1"
            memory: 500Mi
      initContainers:
      - args:
        - -c
        - /usr/local/bin/container-scripts/init.sh
        command:
        - /bin/bash
        env:
        - name: DatabasePassword
          valueFrom:
            secretKeyRef:
              key: KeystoneDatabasePassword
              name: osp-secret
        - name: AdminPassword
          valueFrom:
            secretKeyRef:
              key: AdminPassword
              name: osp-secret
        - name: DatabaseHost
          value: openstack
        - name: DatabaseName
          value: keystone
        - name: DatabaseUser
          value: keystone
        image: quay.io/tripleozedcentos9/openstack-keystone:current-tripleo
        imagePullPolicy: IfNotPresent
        name: init
        resources: {}
      restartPolicy: Always
      serviceAccount: keystone-operator-keystone
      serviceAccountName: keystone-operator-keystone
status:
  availableReplicas: 1
  replicas: 1
---
# the openshift annotations can't be checked through the deployment above
apiVersion: v1
kind: Pod
metadata:
  annotations:
    openshift.io/scc: anyuid
  labels:
    service: keystone
---
apiVersion: v1
kind: Service
metadata:
  labels:
    internal: "true"
    service: keystone
  name: keystone-internal
  namespace: openstack
spec:
  ports:
    - name: keystone-internal
  selector:
    service: keystone
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    public: "true"
    service: keystone
  name: keystone-public
  namespace: openstack
spec:
  ports:
    - name: keystone-public
  selector:
    service: keystone
  type: ClusterIP
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: keystone-public
  labels:
    public: "true"
    service: keystone
  namespace: openstack
spec:
  port:
    targetPort: keystone-public
  to:
    kind: Service
    name: keystone-public
---
# the actual addresses of the apiEndpoints are platform specific, so we can't rely on
# kuttl asserts to check them. This short script gathers the addresses and checks that
# the three endpoints are defined and their addresses follow the default pattern
apiVersion: kuttl.dev/v1beta1
kind: TestAssert
namespaced: true
commands:
  - script: |
      template='{{.status.apiEndpoint.internal}}{{":"}}{{.status.apiEndpoint.public}}{{"\n"}}'
      regex="http:\/\/keystone-internal.openstack.*:http:\/\/keystone-public-openstack\.apps.*"
      apiEndpoints=$(oc get -n openstack KeystoneAPI  keystone -o go-template="$template")
      matches=$(echo "$apiEndpoints" | sed -e "s?$regex??")
      if [ -z "$matches" ]; then
        exit 0
      else
        exit 1
      fi
